---
- name: Creates directory node_modules
  file:
    path: ~/node_modules
    state: directory

- name: Creates directory Backend
  file:
    path: ~/backend
    state: directory

- name: Unarchive Backend
  unarchive:
    src: artifact.tar.gz
    dest: /home/ubuntu/backend/

- name: "start app"
  shell: | 
      npm install
      pm2 stop default
      pm2 start npm -- start
      pm2 start npm -f ./main.js -- run start
  args: 
    chdir: /home/ubuntu/backend/dist/

- name: "List processes"
  shell: |      
      pm2 list
  register: pm2_result 

- name: "Print in the debug console"
  debug:
    var: pm2_result.stdout_lines

  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity{.ts,.js}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

- name: "Creates directory apiState" 
  file:
    path: ~/apiState
    state: directory

- name: "Prepare the api for the backend"
  copy:
    src: index.js
    dest: ~/apiState/
    backup: yes

- name: "start the api"
  shell: |       
      sudo apt install tmux
      npm install express
      cd apiState/
      tmux new -d "node index.js"


- name: "install and start node_exporter"
  shell: |
      sudo apt install tmux
      wget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz
      tar xvfz node_exporter-1.5.0.linux-amd64.tar.gzcd node_exporter-1.5.0.linux-amd64/
      tmux new -d "./node_exporter"
